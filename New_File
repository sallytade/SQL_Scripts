/*	 NAME: SELAMAWIT MELESEW 
							 LESSON: 108 Working With Variables
							 DATE: 8/18/21 */

/*1. Create the following table :. 
a) There should be a Primary Key on FlighID 
b) There should be an identity Constraint on FlightID (100,1)*/

CREATE TABLE Flights
	(
		FlightID INT PRIMARY KEY not null IDENTITY (100,1)
		,FlightDateTime	DATETIME 
		,FlightDepartureCity VARCHAR (50)
		,FlightDestinationCity VARCHAR (50)
		,Ontime INT
	)
 --2. Run the Following Script to insert Date into the table

	INSERT	INTO dbo.Flights (FlightDateTime, FlightDepartureCity, FlightDestinationCity, Ontime)

	SELECT '1/1/2012','Dallas-Texas','L.A.',1  UNION
	SELECT '1/2/2012','Austin-Texas','New York',1  UNION
	SELECT '1/3/2012','Houston-Texas','New Jersy',0  UNION
	SELECT '1/4/2012','San Antonio-Texas','Mesquite',1  UNION
	SELECT '1/5/2012','Lewisville-Texas','Albany',0  UNION
	SELECT '1/6/2012','Orlando-Florida','Atlanta',1  UNION
	SELECT '1/7/2012','Chicago-Illinois','Oklahoma City',1  UNION
	SELECT '1/8/2012','New Orleans-Louisiana','Memphis',0  UNION
	SELECT '1/9/2012','Miami-Florida','Charlotte',1  UNION
	SELECT '1/10/2012','Sacramento-California','San Francisco',1

SELECT	* FROM Flights

--3. Create and set a Variable equal to the number of Flights that were late/

	DECLARE @DlayedFlight INT 
	SET	@DlayedFlight=
						(	
							SELECT  COUNT(Ontime)
							FROM	dbo.Flights
							WHERE	Ontime =0
						)
	SELECT @DlayedFlight

---4 Multiply that amount by the amount lost per late flight ($1,029) and store the amount in another variable.

		DECLARE @DlayedFlight INT , 
				@amountLost	MONEY

					SET @amountLost= 1029
					SET	@DlayedFlight =
										(	SELECT  COUNT(Ontime) 
											FROM	dbo.Flights
											WHERE	Ontime =0 
										)
		SELECT (@DlayedFlight * @amountLost ) TotalAmountLost


--5 Take the total amount lost (#4) and subtractit from Total profit ($45,000) and store that number in a variable.


DECLARE @DlayedFlight INT  
	   ,@amountLost MONEY
       ,@TotalProfit MONEY
	   ,@AmountLostFromProfit MONEY 

		    SET @amountLost= 1029
		    SET	@TotalProfit=45000
		    SET	@DlayedFlight =
								 (	SELECT  COUNT(Ontime)
									FROM	dbo.Flights
									WHERE	Ontime =0 
								 )
    
			SET @AmountLostFromProfit =	
										(SELECT @TotalProfit- (@DlayedFlight * @amountLost)TotalAmountLost )

	 SELECT @AmountLostFromProfit LostProfit 

--6. Find out the Earliset FlightDate and add 10 years to it and store it in a variable.


	DECLARE	@EarlistFlightDate DATETIME 
		   ,@Years INT
	
			SET @Years = 10
			SET @EarlistFlightDate =
								(
									SELECT	 MIN(FlightDateTime) 
									FROM	 Flights
								)

	SELECT DATEADD (YY,@Years,@EarlistFlightDate) AddTenYears 


--7 Find out the day of the week for the Latest FlightDate and store it in a variable.

	DECLARE @LatestFlightDate DATETIME =
										(
											SELECT   MAX (FlightDateTime)
											FROM	 Flights
										)

	SELECT @LatestFlightDate  LatestFlightDate



--8 Create a table variable with Departure City and state in 2 different columns along with Flight Destination City and Ontime

		/* Example how right and left sysfu.works
			select Right ('Selamawit-Shif',Len ('Selamawit-shif')- CHARINDEX ('-','Selamawit-shif'))
			Select Left ('Selamawit-Shif', CHARINDEX ('-','Selamawit-Shif')-1) */

    DECLARE @DepartureDestination TABLE 
									(
										FlightDepartureCity VARCHAR (50)
										, [State] VARCHAR (50)
										,FlightDestinationCity VARCHAR (50)
										, [Ontime] INT
									)
		
	INSERT INTO @DepartureDestination

					SELECT	Left(FlightDepartureCity,CHARINDEX('-',FlightDepartureCity)-1) AS City,
							RIGHT(FlightDepartureCity,LEN(FlightDepartureCity) - CHARINDEX('-',FlightDepartureCity)) AS [State],
							FlightDestinationCity, Ontime

					FROM Flights
		 
  SELECT * FROM @DepartureDestination

  SELECT * FROM Flights

--9 Create a Tabel Variable storing all info  from the dbo.flight table of flights that were ontime. ------------------------------------

   DECLARE @AllFlightinfo TABLE 
							(
								FlightID INT 
								,FlightDateTime DATETIME
								,FLIGHTDEpartureCity VARCHAR (50)
								,FlightDestinationcity VARCHAR (50)
								,Ontime INT
							)

			INSERT INTO @AllFlightinfo
								  SELECT * 
								  FROM   Flights 
								  WHERE Ontime =1


	SELECT * FROM @AllFlightinfo

--10. Create a Table Variable storing all info from the dbo. Flight table of non Texas Flights. 

   DECLARE @Non_TexasFlights TABLE 
								(
									FlightID INT 
									,FlightDateTime DATETIME
									,FlightpartureCity VARCHAR (50)
									,FlightDestinationcity VARCHAR (50)
									,Ontime INT
								)

		   INSERT INTO @Non_TexasFlights

								   SELECT * 
								   FROM   Flights 
								   WHERE  FlightDepartureCity not like '%Texas'

     SELECT * FROM @Non_TexasFlights


--10. Run the following script 

CREATE TABLE HospitalStaff
		(
			EmpID    INT PRIMARY KEY IDENTITY(1000,1) NOT NULL
			,NameJob  VARCHAR (50) NULL
			,HireDate  DATETIME NULL
			,[Location] VARCHAR (150) NULL
	
		)

INSERT INTO  [dbo].[HospitalStaff] ([NameJob],[HireDate],[Location])
SELECT		'Dr. Johnson_Doctor'	,'1/1/2012',	'Dallas-Texas' UNION
SELECT		'Nurse Jackie_Nurse'	,'10/15/2011',	'Mesquite-Texas' UNION
SELECT		'Anne_Nurse Assistant'	,'11/1/2010',	'Denton-Texas' UNION
SELECT		'Dr. Jackson_Doctor'	,'4/2/2008',	'Irving-Texas' UNION
SELECT		'Jamie_Nurse'			,'2/15/2005',	'San Francisco-California' UNION
SELECT		'Aesha_Nurse Assistant'	,'6/30/2003',	'Oakland-California' UNION
SELECT		'Dr. Ali_Doctor'		,'7/4/1999',	'L.A.-California' UNION
SELECT		'Evelyn_Nurse'			,'1/7/2007',	'Fresno-California' UNION
SELECT		'James Worthy_Nurse Assistant'	,'1/1/2012',	'Orlando-Florida' UNION
SELECT		'Anand_Doctor'			,'3/1/2012',	'Miami-Florida'


SELECT		*
FROM		dbo.HospitalStaff

--11. Create a Variable to store how many employees have been employed with the company for more than 3 years.


		DECLARE @HireDayThreeYears int
		 SET @HireDayThreeYears =
									(
									SELECT COUNT( Hiredate +DATEADD (YY,3,HireDate))
									FROM	HospitalStaff
									)
			SELECT	@HireDayThreeYears

--12. Create and populate a Variable to store the number of all employees from Texas.
	
	DECLARE @TexasEmployee INT
		SET @TexasEmployee =
							(
								SELECT COUNT(* )
								FROM HospitalStaff
								WHERE [Location] like '%Texas'
							)

		SELECT @TexasEmployee

--13. Create and populate a Variable to store number of Doctor's from Texas.

			DECLARE @TexasDoctors INT
			SET     @TexasDoctors =
							(
								SELECT COUNT(* )
								FROM HospitalStaff
								WHERE [Location] like '%Texas'
							)
			SELECT @TexasDoctors

--14. Create table variable using data in the dbo.HospitalStaff table with the following 4 columns

				/*  a. Name- Located in the Name job Column : Everything before the '_' . 
					b. Job- Located in the Namejob Column : Everything after the_
					c. Hiredate
					d. City- Located in the Location column:Everything Before the_
					e. State- Located in the Location Column : Everything after the_ */

			/*select Right ('Selamawit-Shif',Len ('Selamawit-shif')- CHARINDEX ('-','Selamawit-shif'))--Shif AFter
			Select Left ('Selamawit-Shif', CHARINDEX ('-','Selamawit-Shif')-1) */ --Selamawit Before*/


			
	DECLARE @EmployeeDetail TABLE 
							  (
								[Name] VARCHAR (50)
								,Job VARCHAR (50)
								,HireDate DATETIME 
								,City VARCHAR (150)
								,[State] VARCHAR (150)
					         )
		INSERT INTO @EmployeeDetail

					SELECT	LEFT(NameJob ,CHARINDEX('_', NameJob )-1) AS [Name]
							,RIGHT(NameJob,LEN(NameJob) - CHARINDEX('_',NameJob)) AS Job
							,HireDate
							,LEFT([Location],CHARINDEX('-', [Location])-1)  City
							,RIGHT([Location],LEN([Location]) - CHARINDEX('-',[Location])) AS [State]
				
					FROM	HospitalStaff
		 
   SELECT * FROM @EmployeeDetail

   ------------------------------------------------------------------

--15. Create a Table Variable using data in the dbo.HospitalStaff table with the following 4 columns
								/*	a. NameJob
									b. DateYear – The Year of the HireDate
									c. DateMonth – The Month of the HireDate
									d. DateDay – The Day of the HireDate */


       DECLARE @HireDateDetail TABLE
								( 
									Namejob VARCHAR (50)
									, HireYear	INT
									, HireMonth INT
									, HireDay   INT
								 )

				INSERT INTO @HireDateDetail 
									SELECT	Namejob
											, YEAR(HireDate) HireYear
											, MONTH (Hiredate) HireMonth
											, DAY(Hiredate) HireDay
									FROM  HospitalStaff


		 SELECT * FROM @HireDateDetail 

-------------------------------------------------------------

SELECT * FROM HospitalStaff
